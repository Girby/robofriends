{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","event","searchField","target","value","fetch","then","res","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCGLI,EATE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA5DQ,OCGfC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCKrGI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKrB,EAAMsB,YCmBJC,E,kDArBX,WAAYvB,GAAO,IAAD,8BACd,cAAMA,IACDwB,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAK5B,MAAMsB,a,GAjBEQ,aC+CbC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAaFlB,aAAe,SAACmB,GACd,EAAKH,SAAS,CAACI,YAAaD,EAAME,OAAOC,SAbzC,EAAKX,MAAQ,CACXhB,OAAQ,GACRyB,YAAa,IAJH,E,qDAQd,WAAoB,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACrB,OAAQgC,S,oBAOxC,WAAU,IAAD,EACyBZ,KAAKJ,MAA7BhB,EADD,EACCA,OAAQyB,EADT,EACSA,YACVQ,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQpC,EAAOsC,OAGX,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAce,KAAKf,eAE9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUL,OAAQiC,WAR1B,6C,GA1BYM,IAAMjB,YCKTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.63d4f9f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const { id, name, email } = props;\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        robots.map((user, i) =>{\r\n            return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n        })\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children; \r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => res.json())\r\n    .then(users => this.setState({robots: users}));\r\n  }\r\n\r\n  searchChange = (event) =>{\r\n    this.setState({searchField: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !robots.length ? \r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\" >RoboFriends</h1>\r\n          <SearchBox searchChange={this.searchChange}/>\r\n          \r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}